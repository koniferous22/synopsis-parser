#!/usr/bin/env bash

function regenerate_snapshots_linux() {
    man git-init  | awk '/^SYNOPSIS/,/^DESCRIPTION/ {print}' | head -n -1 | tail -n +2 | "$project_executable" > "$project_path/test-resources/__snapshots/git-init.json"
    man git-clone | awk '/^SYNOPSIS/,/^DESCRIPTION/ {print}' | head -n -1 | tail -n +2 | "$project_executable" > "$project_path/test-resources/__snapshots/git-clone.json"
    man git       | awk '/^SYNOPSIS/,/^DESCRIPTION/ {print}' | head -n -1 | tail -n +2 | "$project_executable" > "$project_path/test-resources/__snapshots/git.json"
}

function regenerate_snapshots_darwin() {
    man git-init  | col -bx | awk '/^SYNOPSIS/,/^DESCRIPTION/ {print}' | ghead -n -1 | tail -n +2 | "$project_executable" > "$project_path/test-resources/__snapshots/git-init.json"
    man git-clone | col -bx | awk '/^SYNOPSIS/,/^DESCRIPTION/ {print}' | ghead -n -1 | tail -n +2 | "$project_executable" > "$project_path/test-resources/__snapshots/git-clone.json"
    man git       | col -bx | awk '/^SYNOPSIS/,/^DESCRIPTION/ {print}' | ghead -n -1 | tail -n +2 | "$project_executable" > "$project_path/test-resources/__snapshots/git.json"
}

function main() {
    local project_path=$(realpath "$(dirname "$0")/..")
    local project_executable="$project_path/bin/synopsis-parser"
    local os_name="$(uname)"
    if [[ ! -x $project_executable ]];then
        echo "Project not build" >&2
        return 1
    fi
    if [[ $os_name == "Darwin" && ! "$(which "ghead" 2>/dev/null)" ]]; then
        echo "\"coreutils\" not installed - \"ghead\" command missing" >&2
        return 1
    fi
    if [[ $os_name == "Linux" ]]; then
        regenerate_snapshots_linux
    elif [[ $os_name == "Darwin" ]]; then
        regenerate_snapshots_darwin
    else
        echo "Unsupported OS detected" 1>&2
        return 1
    fi
}

main "$@"
